/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package authentication;

import javax.swing.JOptionPane;
//personal added imports here
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.mysql.jdbc.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;

//others
import java.awt.Desktop;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;

//excel
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author franz
 */
public class ManagePatient extends javax.swing.JFrame {
//Connection Db - DATABASE CONNECTION

    Connection con = (Connection) connectionDB.getConnectionDB();

    /**
     * Creates new form ManagePatient
     */
    public ManagePatient() {
        initComponents();
        retrieve();
    }

    void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException E) {
            E.printStackTrace();
        }
    }

    //SHOW ALL DATA -- TO CHANGE SPECIFIC
    String pName, doc, date, bp, diag, med, account;

    void retrieve() {
        String query = "SELECT*FROM medical_records "
                + "Inner join patient_registration on medical_records.F_Patient_id = Patient_id "
                + "Inner join doctor on medical_records.F_Doctor_code= Doctor_code "
                + "Inner join account on medical_records.F_Account_id= Acc_id "
                + "WHERE F_Patient_id = '" + Patient_Registration.patIDs + "' ";

        DefaultTableModel dtm = (DefaultTableModel) medrec_data.getModel();
        dtm.setRowCount(0);

        try {
            PreparedStatement pst = (PreparedStatement) con.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {

                pName = rs.getString("Patient_lname") + ", " + rs.getString("Patient_fname");
                doc = "Dr. " + rs.getString("Doctor_Fullname");
                date = rs.getString("Date");
                bp = rs.getString("BP");
                diag = rs.getString("Diagnosis");
                med = rs.getString("Medication");
                account = rs.getString("Acc_Name");

                dtm.addRow(new Object[]{pName, doc, date, bp, diag, med, account});
            }

        } catch (SQLException ex) {
            Logger.getLogger(ManagePatient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        medrec_data = new javax.swing.JTable();
        GenerateMedrec = new javax.swing.JButton();
        exportexcel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(786, 413));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 255));
        jLabel3.setText("Medical Records");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        medrec_data.setFont(new java.awt.Font("Century Gothic", 0, 10)); // NOI18N
        medrec_data.setForeground(new java.awt.Color(0, 102, 102));
        medrec_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Doctor", "Date", "Blood Pressure", "Diagnosis", "Medication", "Account"
            }
        ));
        medrec_data.setToolTipText("");
        medrec_data.setGridColor(new java.awt.Color(255, 255, 255));
        medrec_data.setSelectionBackground(new java.awt.Color(0, 102, 153));
        medrec_data.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(medrec_data);

        GenerateMedrec.setText("Generate Medical Record");
        GenerateMedrec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateMedrecActionPerformed(evt);
            }
        });

        exportexcel.setText("Export Excel");
        exportexcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportexcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(16, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 928, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(exportexcel, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(GenerateMedrec, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GenerateMedrec, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(exportexcel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 950, 460));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 950, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //GENERATE MEDICAL RECORD SUMMARY FOR ALL- TO CHANGE FOR SPECIFIC
    private void GenerateMedrecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateMedrecActionPerformed
        // TODO add your handling code here:
        String patname = medrec_data.getValueAt(medrec_data.getSelectedRow(), 0).toString();
        String docname = medrec_data.getValueAt(medrec_data.getSelectedRow(), 1).toString();
        String daterec = medrec_data.getValueAt(medrec_data.getSelectedRow(), 2).toString();
        String bp = medrec_data.getValueAt(medrec_data.getSelectedRow(), 3).toString();
        String diagnosis = medrec_data.getValueAt(medrec_data.getSelectedRow(), 4).toString();
        String medication = medrec_data.getValueAt(medrec_data.getSelectedRow(), 5).toString();
        String add = "", bdate = "", gender = "", weight = "", height = "";
        String lname = (String) Patient_Registration.patreg_data.getValueAt(Patient_Registration.patreg_data.getSelectedRow(), 1);
        String fname = (String) Patient_Registration.patreg_data.getValueAt(Patient_Registration.patreg_data.getSelectedRow(), 2);

//date generated
        //for patient registration data here
        //date registered
        //date of birth
        Medrec_Document d = new Medrec_Document();
        d.setVisible(true);

        String docId = null;

        try {
            String query = "SELECT address.barangay, address.municipality, address.province, birthdate, gender, weight, height from patient_registration left join "
                    + "address on patient_registration.f_address = address.add_code where Patient_fname = '" + fname + "' and Patient_lname = "
                    + "'" + lname + "'";
            Statement st = (Statement) con.createStatement();
            ResultSet rs = st.executeQuery(query);

            if (rs.next()) {
                String a1, a2, a3;
                a1 = rs.getString("Barangay");
                a2 = rs.getString("Municipality");
                a3 = rs.getString("Province");
                add = a1 + ", " + a2 + ", " + a3;
                bdate = rs.getString("BirthDate");
                gender = rs.getString("gender");
                weight = rs.getString("weight");
                height = rs.getString("height");

                Medrec_Document.addresstxt.setText(add);
                Medrec_Document.bdatetxt.setText(bdate);
                Medrec_Document.weighttxt.setText(weight);
                Medrec_Document.heighttxt.setText(height);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        Medrec_Document.patnametxt.setText(patname);
        Medrec_Document.doctortxt.setText(docname);
        Medrec_Document.daterectxt.setText(daterec);
        Medrec_Document.bptxt.setText(bp);
        Medrec_Document.diagnosistxt.setText(diagnosis);
        Medrec_Document.medicationtxt.setText(medication);

    }//GEN-LAST:event_GenerateMedrecActionPerformed

    private void exportexcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportexcelActionPerformed
        // TODO add your handling code here:
        try {
            Workbook wb = new XSSFWorkbook();
            Sheet sheet = wb.createSheet("Sample");
            Row row;
            Cell cell;

            CellStyle style1 = wb.createCellStyle();

            style1.setAlignment(HorizontalAlignment.CENTER);
            style1.setVerticalAlignment(VerticalAlignment.CENTER);

            //HEADER
            row = sheet.createRow(1);
            sheet.addMergedRegion(new CellRangeAddress(1, 1, 0, 7));
            cell = row.createCell(0);
            cell.setCellValue("MEDICAL RECORD");
            cell.setCellStyle(style1);

            //number of column
            row = sheet.createRow(2);
            for (int i = 0; i < 7; i++) {
                cell = row.createCell(i);
                cell.setCellValue(medrec_data.getColumnName(i));
                cell.setCellStyle(style1);
            }

            //rows
            row = sheet.createRow(3);
            for (int i = 0; i < medrec_data.getRowCount(); i++) {
                row = sheet.createRow(i + 3);

                for (int j = 0; j < 7; j++) {
                    cell = row.createCell(j);
                    cell.setCellValue((String) medrec_data.getValueAt(i, j));

                    cell.setCellStyle(style1);
                }
            }

            //OUTPUT
            FileOutputStream out = new FileOutputStream(new File("C:\\Users\\franz\\Downloads\\Medical_Records\\medrec.xlsx"));

            wb.write(out);
            wb.close();
            out.close();
            JOptionPane.showMessageDialog(null, "Exported successfully!");
            openFile("C:\\Users\\franz\\Downloads\\Medical_Records\\medrec.xlsx");
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_exportexcelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManagePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManagePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManagePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManagePatient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManagePatient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GenerateMedrec;
    private javax.swing.JButton exportexcel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable medrec_data;
    // End of variables declaration//GEN-END:variables
}
